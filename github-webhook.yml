apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-webhook
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-trigger-dependency
      eventSourceName: webhook
      eventName: github
  triggers:
    - template:
        name: pipeline-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          parameters:
            - src:
                dependencyName: github-trigger-dependency
                dataKey: body
              dest: spec.arguments.parameters.0.value
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: pipeline-
              spec:
                entrypoint: pipeline
                serviceAccountName: user-workflow-sa
                arguments:
                  parameters:
                  - name: payload
                    value: "ERROR_GITHUB_PAYLOAD_EMPTY"
                templates:
                - name: pipeline
                  steps:
                  - - name: parse-payload
                      template: parse-payload
                      arguments:
                        parameters:
                        - name: payload
                          value: "{{workflow.parameters.payload}}"
                - name: parse-payload
                  inputs:
                    parameters:
                    - name: payload
                  script:
                    image: python:alpine3.9
                    command: [python]
                    source: |
                      import json

                      raw_payload = '{{inputs.parameters.payload}}'
                      print(f"Unprocessed Github payload:\n\n {raw_payload}")

                      payload = json.loads(raw_payload)

                      try:
                        repo_name = payload['repository']['full_name']
                        repo_url = payload['repository']['url']
                        compare_url = payload['compare']
                        ref = payload['ref']
                        head_commit = payload['head_commit']
                        git_url = payload['repository']['git_url']

                        print(f"""
                          Ref: {ref}\n
                          Repository name: {repo_name}\n
                          Repository URL: {repo_url}\n
                          Compare URL: {compare_url}\n
                          Head commit: {head_commit}\n
                        """)

                      except Exception as err:
                        raise Exception(f"Failed to parse github payload. Was this "
                              f"triggered from Github?")
