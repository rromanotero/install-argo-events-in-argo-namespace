apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-webhook
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-trigger-dependency
      eventSourceName: webhook
      eventName: github
  triggers:
    - template:
        name: pipeline-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          parameters:
            - src:
                dependencyName: github-trigger-dependency
                dataKey: body
              dest: spec.arguments.parameters.0.value
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: pipeline-
              spec:
                entrypoint: pipeline
                serviceAccountName: user-workflow-sa
                arguments:
                  parameters:
                  - name: payload
                    value: "ERROR_GITHUB_PAYLOAD_EMPTY"
                templates:
                - name: pipeline
                  steps:
                  - - name: clone
                      template: clone
                      arguments:
                        parameters:
                        - name: payload
                          value: "{{workflow.parameters.payload}}"
                - name: clone
                  inputs:
                    parameters:
                    - name: payload
                  script:
                    image: public.ecr.aws/k7d0s6i7/public_system_container_ci:local
                    imagePullPolicy: Always
                    command: [bash]
                    source: |
                      set +x
                      set -e

                      PAYLOAD='{{inputs.parameters.payload}}'

                      echo '=============================================='
                      echo '        Original unprocessed payload          '
                      echo '=============================================='
                      echo $PAYLOAD

                      echo '=============================================='
                      echo '                Parsing git params            '
                      echo '=============================================='
                      CLONE_URL=$(echo $PAYLOAD | jq -r .repository.clone_url)
                      REPO_FULL_NAME=$(echo $PAYLOAD | jq -r .repository.full_name)
                      REPO_NAME=$(echo $PAYLOAD | jq -r .repository.name)
                      REF=$(echo $PAYLOAD | jq -r .ref)
                      BRANCH_NAME=${REF##*/}
                      COMMIT_ID=$(echo $PAYLOAD | jq -r .head_commit.id)
                      COMMIT_MESSAGE=$(echo $PAYLOAD | jq -r .head_commit.message)
                      COMPARE_URL=$(echo $PAYLOAD | jq -r .compare)

                      echo "Clone URL: "$CLONE_URL
                      echo "Repo full name: "$REPO_FULL_NAME
                      echo "Repo name: "$REPO_NAME
                      echo "Ref: "$REF
                      echo "Branch Name: "$BRANCH_NAME
                      echo "Comit ID: "$COMMIT_ID
                      echo "Commit message: "$COMMIT_MESSAGE
                      echo "Compare URL: "$COMPARE_URL

                      echo '=============================================='
                      echo '             Git clone + checkout             '
                      echo '=============================================='
                      git clone $CLONE_URL
                      cd $REPO_NAME && git checkout $BRANCH_NAME

                      echo '=============================================='
                      echo '              Project contents                '
                      echo '=============================================='
                      ls .
                      echo '==============================================='
                      echo '             Detecting Services              '
                      echo '=============================================='
                      echo '....PENDING....'
                      echo '=============================================='
                      echo '                 Build Service                '
                      echo '=============================================='
                      echo '....PENDING....'
